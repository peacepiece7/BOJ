// 어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면,
// 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다.
// N이 주어졌을 때, 1보다 크거나 같고,
// N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오.

/*
N = 130일 경우

1. 1 2 3 4 ... 129 130,  공차가 1인 등차수열
2. 1 2 3 4 ... 129 130, 공차가 1인 등차수열
3. 1 2 3 4 ... 129 130,  공차가 1인 등차수열
4. 1 2 3 4 ... 129 130, 공차가 1인 등차수열

10. 130 129 ... 1 0, 공차가 -1인 등차수열
11. 1 1 1 .. 1 1, 공차 0인 등차수열 (같은 수가 반복되면 130에 도달 못해도 등차수열임)

100. 1 0 0 ... 없음, 1 0 0수열을 이루는 공차 없음
101, 1 0 1 ... 없음, 1 0 1수열을 이루는 공차 없음

123, 1 2 3 4 .. 129 130, 공차가 1인 등차수열
124, 1 2 4 ... 없음, 1 2 4수열을 이루는 공차 없음
130, 1 3 0 ... 없음, 1 3 0수열을 이루는 공차 없음 

total = 99
*/

공차 + init(count)

N = 130
i <= N,

init(count) = i
i
1, 2, 3, 4, 10 ,11 ,100 101,123.toString().split("")

// 공차가 존재함 = true, 

// 공차가 1일 경우 2,3,4,5 모두 체크
// 공차가 0일 경우, 체크,
// 공차가 -1일 경우  1 0, 2 1, 3 2 모두 체크 

// 고로 공차가 1, 0 ,-1에 해당되면 체크 
// 배수 x n , 배수 x n +1 해당되면 체크

//  문자열로 변환 후 한자리씩 따와서 인접한 숫자끼리 뺄셈한 결과가 같으면 한수가 나오게 되는 것

// 자연수 N이 주어짐, 정수 i의 각 자리가 등차 수열을 이룸 => true,
const fs = require("fs")
const N = fs.readFileSync(__dirname+"/input.txt")

for (let i = 1; i <= N; i++){
    // [1], [1,1], [1,2], [1,0,0], [1,0,1], [1,2,3]
    const artimethicSequence = i.toString().split("")
    for (let i = 1; i <= N; i++){

    }
}
